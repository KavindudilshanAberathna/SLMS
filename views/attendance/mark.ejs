<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SLMS | mark student attendance </title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Sinhala&family=Noto+Sans+Tamil&family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script>tailwind.config={theme:{extend:{colors:{primary:'#800000',secondary:'#4B5563'},borderRadius:{'none':'0px','sm':'4px',DEFAULT:'8px','md':'12px','lg':'16px','xl':'20px','2xl':'24px','3xl':'32px','full':'9999px','button':'8px'}}}}</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.5.0/echarts.min.js"></script>
    <style>
        :where([class^="ri-"])::before { content: "\f3c2"; }
        body {
            font-family: 'Poppins', 'Noto Sans Sinhala', 'Noto Sans Tamil', sans-serif;
        }
        .sinhala {
            font-family: 'Noto Sans Sinhala', sans-serif;
        }
        .tamil {
            font-family: 'Noto Sans Tamil', sans-serif;
        }
        .sidebar-item.active {
            background-color: rgba(128, 0, 0, 0.1);
            color: #800000;
            border-left: 3px solid #800000;
        }
        input[type="checkbox"] {
            appearance: none;
            -webkit-appearance: none;
            width: 18px;
            height: 18px;
            border: 2px solid #d1d5db;
            border-radius: 4px;
            outline: none;
            cursor: pointer;
            position: relative;
        }
        input[type="checkbox"]:checked {
            background-color: #800000;
            border-color: #800000;
        }
        input[type="checkbox"]:checked::before {
            content: "";
            position: absolute;
            top: 2px;
            left: 5px;
            width: 6px;
            height: 10px;
            border-right: 2px solid white;
            border-bottom: 2px solid white;
            transform: rotate(45deg);
        }
        .language-dropdown {
            position: relative;
        }
        .language-options {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            z-index: 50;
            min-width: 150px;
        }
        .language-dropdown:hover .language-options {
            display: block;
        }
        .profile-dropdown {
            position: relative;
        }
        .profile-options {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            z-index: 50;
            min-width: 200px;
        }
        .profile-dropdown:hover .profile-options {
            display: block;
        }
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }
            .sidebar.open {
                transform: translateX(0);
            }
        }
        ::-webkit-scrollbar {
            width: 6px;
        }
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        ::-webkit-scrollbar-thumb {
            background: #d1d5db;
            border-radius: 3px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #9ca3af;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Navigation Bar -->
    <nav class="fixed top-0 left-0 right-0 h-16 bg-primary shadow-md z-50 flex items-center justify-between px-4">
        <div class="flex items-center">
            <button id="sidebar-toggle" class="md:hidden mr-3 w-8 h-8 flex items-center justify-center text-white">
                <i class="ri-menu-line ri-lg"></i>
            </button>
            <div class="font-['Pacifico'] text-white text-2xl">MPC</div>
        </div>
        <div class="flex items-center space-x-4">
            <div class="w-8 h-8 flex items-center justify-center text-white relative">
                <i class="ri-notification-3-line ri-lg"></i>
                <span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">3</span>
            </div>
            <div class="w-8 h-8 flex items-center justify-center text-white relative">
                <i class="ri-message-3-line ri-lg"></i>
                <span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">5</span>
            </div>
            <div class="profile-dropdown">
                <button class="flex items-center space-x-2">
                    <div class="w-8 h-8 rounded-full bg-white flex items-center justify-center overflow-hidden">
                        <img src="/uploads/<%= user.profilePicture %>"  alt="Profile" class="w-full h-full object-cover">
                    </div>
                </button>
                <div class="profile-options">
                    <div class="px-4 py-3 border-b border-gray-200">
                        <p class="text-sm font-medium"><%= user.fullName %></p>
                        <p class="text-xs text-gray-500"><%= user.role %></p>
                    </div>
                    <a href="#" class="flex items-center px-4 py-2 hover:bg-gray-100">
                        <i class="ri-user-line mr-2"></i>
                        <span>My Profile</span>
                    </a>
                    <a href="/logout" class="flex items-center px-4 py-2 hover:bg-gray-100 text-red-600">
                        <i class="ri-logout-box-line mr-2"></i>
                        <span>Logout</span>
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Sidebar -->
    <% if (user && user.role === 'admin') { %>
      <%- include('../partials/adminsidebar') %>
    <% } else if (user && user.role === 'teacher') { %>
      <%- include('../partials/teachermark') %>
    <% } %>

    <!-- Main Content -->
    <main class="pt-16 md:pl-60 min-h-screen">
        <div class="p-4 md:p-6 max-w-7xl mx-auto">
            <!-- Welcome Section -->
            <div class="bg-white rounded shadow-md p-6 mb-6">
  <% if (assignedSubjects.length === 0) { %>
    <p class="text-gray-600">No subjects assigned to you.</p>
  <% } else { %>
    <form method="GET" action="/attendance/mark" class="space-y-4 mb-6">
      <div>
        <label for="date" class="block font-semibold text-[#800000] mb-1">Date:</label>
        <input type="date" id="date" name="date" value="<%= date %>" required
          class="w-full border border-[#800000] rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#800000]"/>
      </div>

      <div>
        <label for="grade" class="block font-semibold text-[#800000] mb-1">Grade:</label>
        <select name="grade" id="grade" required
          class="w-full border border-[#800000] rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#800000]">
          <option value="">--Select Grade--</option>
          <% assignedGrades.forEach(function(grade) { %>
            <option value="<%= grade %>" <%= grade === selectedGrade ? 'selected' : '' %>><%= grade %></option>
          <% }) %>
        </select>
      </div>

      <div>
        <label for="subject" class="block font-semibold text-[#800000] mb-1">Subject:</label>
        <select name="subject" id="subject" required
          class="w-full border border-[#800000] rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#800000]">
          <option value="">--Select Subject--</option>
          <% assignedSubjects.forEach(function(subject) { %>
            <option value="<%= subject %>" <%= subject === selectedSubject ? 'selected' : '' %>><%= subject %></option>
          <% }) %>
        </select>
      </div>

      <button type="submit"
        class="bg-[#800000] text-white px-5 py-2 rounded font-semibold hover:bg-red-800 transition">
        Load Students
      </button>
    </form>
  <% } %>

  <% if (students && students.length > 0) { %>
    <h2 class="text-xl font-bold text-[#800000] mb-4">Students List</h2>
    <form method="POST" action="/attendance/mark" class="space-y-4">
      <input type="hidden" name="date" value="<%= date %>" />
      <input type="hidden" name="grade" value="<%= selectedGrade %>" />
      <input type="hidden" name="subject" value="<%= selectedSubject %>" />

      <div class="overflow-x-auto">
        <table class="min-w-full border border-gray-300 text-sm">
          <thead class="bg-[#800000] text-white">
            <tr>
              <th class="p-2 border border-gray-300 text-left">Student Name</th>
              <th class="p-2 border border-gray-300 text-left">Attendance Status</th>
            </tr>
          </thead>
          <tbody>
            <% students.forEach(function(student) { %>
              <tr class="hover:bg-gray-50">
                <td class="p-2 border border-gray-300"><%= student.fullName %></td>
                <td class="p-2 border border-gray-300">
                  <select name="attendanceStatus_<%= student._id %>" required
                    class="w-full border border-[#800000] rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-[#800000]">
                    <option value="Present">Present</option>
                    <option value="Absent">Absent</option>
                    <option value="Late">Late</option>
                  </select>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <button type="submit"
        class="bg-[#800000] text-white px-5 py-2 rounded font-semibold hover:bg-red-800 transition">
        Save Attendance
      </button>
    </form>
  <% } else if (selectedGrade && selectedSubject) { %>
    <p class="text-gray-600 mt-4">No students found for selected grade and subject.</p>
  <% } %>
</div>

        </div>
    </main>

  <script>
  const assignments = JSON.parse(document.getElementById('assignments-data').value);
  const gradeSelect = document.getElementById('grade');
  const subjectSelect = document.getElementById('subject');

  // Get unique grades and subjects
  const uniqueGrades = [...new Set(assignments.map(a => a.grade))];
  const uniqueSubjects = [...new Set(assignments.map(a => a.subject))];

  function populateGrades() {
    gradeSelect.innerHTML = '<option value="">-- Select Grade --</option>';
    uniqueGrades.forEach(grade => {
      const option = document.createElement('option');
      option.value = grade;
      option.text = grade;
      gradeSelect.appendChild(option);
    });
  }

  function populateSubjects() {
    subjectSelect.innerHTML = '<option value="">-- Select Subject --</option>';
    uniqueSubjects.forEach(subject => {
      const option = document.createElement('option');
      option.value = subject;
      option.text = subject;
      subjectSelect.appendChild(option);
    });
  }

  // Filter subject options when grade is selected
  gradeSelect.addEventListener('change', () => {
    const selectedGrade = gradeSelect.value;
    subjectSelect.innerHTML = '<option value="">-- Select Subject --</option>';
    assignments
      .filter(a => a.grade === selectedGrade)
      .forEach(a => {
        const option = document.createElement('option');
        option.value = a.subject;
        option.text = a.subject;
        subjectSelect.appendChild(option);
      });
  });

  // Filter grade options when subject is selected
  subjectSelect.addEventListener('change', () => {
    const selectedSubject = subjectSelect.value;
    gradeSelect.innerHTML = '<option value="">-- Select Grade --</option>';
    assignments
      .filter(a => a.subject === selectedSubject)
      .forEach(a => {
        const option = document.createElement('option');
        option.value = a.grade;
        option.text = a.grade;
        gradeSelect.appendChild(option);
      });
  });

  // Initial load
  populateGrades();
  populateSubjects();
</script>
  </body>
</html>





